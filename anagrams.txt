import java.util.HashMap;
import java.util.Map;

public class AnagramChecker {

    public static boolean areAnagrams(String str1, String str2) {
        // Check if lengths are different, if yes, they can't be anagrams
        if (str1.length() != str2.length()) {
            return false;
        }

        // Create a map to store character frequencies for the first string
        Map<Character, Integer> charFrequency = new HashMap<>();

        // Populate the map with character frequencies from the first string
        for (char c : str1.toCharArray()) {
            charFrequency.put(c, charFrequency.getOrDefault(c, 0) + 1);
        }

        // Check character frequencies in the second string
        for (char c : str2.toCharArray()) {
            // If the character is not present in the map or its frequency is 0, they are not anagrams
            if (!charFrequency.containsKey(c) || charFrequency.get(c) == 0) {
                return false;
            }

            // Decrement the frequency of the character in the map
            charFrequency.put(c, charFrequency.get(c) - 1);
        }

        // If all characters in the second string are accounted for, they are anagrams
        return true;
    }

    public static void main(String[] args) {
        String str1 = "pet";
        String str2 = "car";

        if (areAnagrams(str1, str2)) {
            System.out.println(str1 + " and " + str2 + " are anagrams.");
        } else {
            System.out.println(str1 + " and " + str2 + " are not anagrams.");
        }
    }
}
output:
pet and car are not anagrams.